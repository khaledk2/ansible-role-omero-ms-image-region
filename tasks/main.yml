---
# tasks for omero_ms_image_region

- name: Check that the ms conf exists
  become: true
  ansible.builtin.stat:
     path: "{{ omero_ms_image_region_folder }}/{{ omero_ms_image_region_name }}"
  register: stat_result

- name: Use sha256 to calculate the checksum
  become: true
  ansible.builtin.stat:
    path: "{{ omero_ms_image_region_folder }}/{{ omero_ms_image_region_name }}"
    checksum_algorithm: sha256
  register: stat_ssh256

- import_tasks: pre_tasks.yml
  when:
   - stat_ssh256.stat.checksum is undefined or omero_ms_image_region_package_sha256 !=  stat_ssh256.stat.checksum
   - not stat_result.stat.exists

- name: omero-ms-image-region | set redis uri in protected mode
  ansible.builtin.set_fact:
    omero_ms_image_region_ms_redis_uri:
      "redis://:@{{ omero_ms_image_region_redis_url }}:{{ omero_ms_image_region_redis_port }}/0"
  when: not omero_ms_image_region_redis_pass

- name: omero-ms-image-region | set redis uri in not protected mode
  ansible.builtin.set_fact:
    omero_ms_image_region_ms_redis_uri:
      "redis://:{{ omero_ms_image_region_redis_pass }}@{{ omero_ms_image_region_redis_url }}:{{ omero_ms_image_region_redis_port }}/0"
  when: omero_ms_image_region_redis_pass

- name: omero-ms-image-region | copy config file
  become: true
  ansible.builtin.template:
    dest: "{{ omero_ms_image_region_folder }}/omero-ms-image-region/conf/config.yaml"
    src: config.yaml.j2

- name: omero-ms-image-region | copy log config file
  become: true
  ansible.builtin.template:
    dest: "{{ omero_ms_image_region_folder }}/omero-ms-image-region/conf/logback.xml"
    src: logback.xml.j2

- name: omero-ms-image-region | copy run.sh
  become: true
  ansible.builtin.template:
    dest: "{{ omero_ms_image_region_folder }}/omero-ms-image-region/run.sh"
    src: run.sh.j2
    mode: +x

- name: omero-ms-image-region | copy stop.sh
  become: true
  ansible.builtin.template:
    dest: "{{ omero_ms_image_region_folder }}/omero-ms-image-region/stop.sh"
    src: stop.sh.j2
    mode: +x

- name: omero-ms-image-region | copy systemd service
  become: true
  ansible.builtin.template:
    dest: /etc/systemd/system/omero-ms-image-region.service
    src: omero-ms-image-region.service.j2
    mode: 0644
  notify:
    - enable omero-ms-image-region service
    - restart omero-ms-image-region service

- name: omero-ms-image-region | selinux http_port_t for ms port
  become: true
  ignore_errors: true

  ansible.builtin.seport:
    ports: "{{ omero_ms_image_region_port }}"
    proto: tcp
    setype: http_port_t
    state: present
  notify:
    - restart omero-ms-image-region service
  when: ansible_facts.selinux.status == 'enabled'

- import_tasks: update_nginx_config.yml
  when: omero_ms_image_region_update_nginx

- name: Get Service Status
  ansible.builtin.systemd:
    name: "omero-ms-image-region.service"
  register: ms_service_status

- debug:
    var: ms_service_status

- debug:
    var: ms_service_status.status.ActiveState

- name: read service file
  slurp:
    src: /etc/systemd/system/omero-ms-image-region.service
  register: service_file

- debug: msg="{{ service_file['content'] | b64decode }}"
